<!DOCTYPE html>
<html>
<head>
    <title>DESERT BAG - Sign In</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap" rel="stylesheet">
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-auth-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-firestore-compat.js"></script>
    <style>
        :root {
            --desert-brown: #8B4513;
            --sunset-orange: #E67E22;
            --off-white: #FFF9F0;
            --soft-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

        body {
            background-image: url('https://i0.wp.com/travelwithme247blog.com/wp-content/uploads/2024/01/funky-desert-captions.jpg?resize=940%2C788&ssl=1');
            background-size: cover;
            background-repeat: no-repeat;
            background-attachment: fixed;
            background-position: center;
            margin: 0;
            font-family: 'Poppins', sans-serif;
            color: #333;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        nav {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(5px);
            padding: 1rem 5%;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: var(--soft-shadow);
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 10px;
            font-weight: 700;
            font-size: 1.2rem;
            color: var(--desert-brown);
        }

        .logo img {
            border-radius: 50%;
            height: 40px;
            width: 40px;
        }

        .nav-links {
            display: flex;
            gap: 1.5rem;
            align-items: center;
        }

        .nav-links a {
            text-decoration: none;
            color: var(--desert-brown);
            font-weight: 600;
            padding: 0.5rem 1rem;
            border-radius: 5px;
            transition: all 0.3s ease;
        }

        .nav-links a:hover {
            background: rgba(230, 126, 34, 0.1);
            color: var(--sunset-orange);
        }

        .nav-links a.active {
            background: rgba(230, 126, 34, 0.2);
        }

        .auth-container {
            display: flex;
            justify-content: center;
            align-items: center;
            flex-grow: 1;
            padding: 2rem;
        }

        .auth-form {
            background: rgba(255, 255, 255, 0.95);
            width: 100%;
            max-width: 500px;
            padding: 2.5rem;
            border-radius: 15px;
            box-shadow: var(--soft-shadow);
            animation: fadeIn 0.5s ease;
            position: relative;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group input {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-family: 'Poppins', sans-serif;
            transition: all 0.3s;
        }

        .form-group input:focus {
            border-color: var(--sunset-orange);
            outline: none;
        }

        .auth-btn {
            background: var(--sunset-orange);
            color: white;
            border: none;
            padding: 12px 25px;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            width: 100%;
            transition: all 0.3s;
        }

        .auth-btn:hover {
            background: #d35400;
        }

        .auth-tabs {
            display: flex;
            margin-bottom: 1.5rem;
            border-bottom: 1px solid #eee;
        }

        .auth-tab {
            padding: 10px 20px;
            cursor: pointer;
            border-bottom: 3px solid transparent;
            flex: 1;
            text-align: center;
            transition: all 0.3s;
        }

        .auth-tab:hover {
            color: var(--sunset-orange);
        }

        .auth-tab.active {
            border-color: var(--sunset-orange);
            font-weight: 600;
            color: var(--sunset-orange);
        }

        .google-btn {
            background: #4285F4;
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 12px;
            border-radius: 8px;
            margin: 1rem 0;
            cursor: pointer;
            transition: all 0.3s;
            border: none;
            font-family: 'Poppins', sans-serif;
            font-weight: 600;
        }

        .google-btn:hover {
            background: #357ABD;
        }

        .google-btn img {
            width: 20px;
            margin-right: 10px;
        }

        .error-message {
            color: #e74c3c;
            margin-top: 5px;
            font-size: 14px;
            display: none;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @media (max-width: 768px) {
            .nav-links {
                gap: 0.5rem;
                font-size: 14px;
            }
            
            .auth-form {
                padding: 1.5rem;
            }
        }
    </style>
</head>
<body>
    <nav>
        <div class="logo">
            <img src="https://via.placeholder.com/40" alt="Desert Bag Logo"> 
            <span>Desert Bag</span>
        </div>
        <div class="nav-links">
            <a href="desertbag.html">HOME</a>
            <a href="weather.html">WEATHER</a>
            <a href="survival.html">SURVIVAL GUIDE</a>
            <a href="packing.html">PACKING LIST</a>
            <a href="resource.html">RESOURCE</a>
            <a href="signinn.html" class="active">SIGN IN</a>
            <a href="map.html">MAP</a>
            <a id="logoutBtn" style="display:none;" href="#logout">LOGOUT</a>
        </div>
    </nav>
    <div class="auth-container">
        <div class="auth-form" id="authForm">
            <div class="auth-tabs">
                <div class="auth-tab active" id="signupTab">Sign Up</div>
                <div class="auth-tab" id="loginTab">Log In</div>
            </div>
            
            <form id="signupForm" style="display:block;">
                <div class="form-group">
                    <input type="email" id="signupEmail" placeholder="Email" required>
                    <div class="error-message" id="signupEmailError"></div>
                </div>
                <div class="form-group">
                    <input type="password" id="signupPassword" placeholder="Password (min 8 chars)" required minlength="8">
                    <div class="error-message" id="signupPasswordError"></div>
                </div>
                <button type="submit" class="auth-btn">Create Account</button>
            </form>

            <form id="loginForm" style="display:none;">
                <div class="form-group">
                    <input type="email" id="loginEmail" placeholder="Email" required>
                    <div class="error-message" id="loginEmailError"></div>
                </div>
                <div class="form-group">
                    <input type="password" id="loginPassword" placeholder="Password" required>
                    <div class="error-message" id="loginPasswordError"></div>
                </div>
                <button type="submit" class="auth-btn">Log In</button>
            </form>

            <div class="google-btn" id="googleAuth">
                <img src="https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg" alt="Google Logo">
                Continue with Google
            </div>
        </div>
    </div>

    <script>
        const firebaseConfig = {
            apiKey: "AIzaSyDaY-KSwBm874ajkzeureqXknB-wQiFvFo",
            authDomain: "desertbagg.firebaseapp.com",
            projectId: "desertbagg",
            storageBucket: "desertbagg.appspot.com",
            messagingSenderId: "28779791562",
            appId: "1:28779791562:web:9748e8e776a6c8b0a7e033",
            measurementId: "G-97L61WG0W2"
        };

        const app = firebase.initializeApp(firebaseConfig);
        const auth = firebase.auth();
        const db = firebase.firestore();

        const logoutBtn = document.getElementById('logoutBtn');
        const signupTab = document.getElementById('signupTab');
        const loginTab = document.getElementById('loginTab');
        const signupForm = document.getElementById('signupForm');
        const loginForm = document.getElementById('loginForm');
        const googleAuth = document.getElementById('googleAuth');
        const authForm = document.getElementById('authForm');

        auth.setPersistence(firebase.auth.Auth.Persistence.LOCAL)
            .catch((error) => {
                console.error("Error setting persistence:", error);
            });

        signupTab.addEventListener('click', () => {
            signupTab.classList.add('active');
            loginTab.classList.remove('active');
            signupForm.style.display = 'block';
            loginForm.style.display = 'none';
            clearErrorMessages();
        });

        loginTab.addEventListener('click', () => {
            loginTab.classList.add('active');
            signupTab.classList.remove('active');
            loginForm.style.display = 'block';
            signupForm.style.display = 'none';
            clearErrorMessages();
        });

        auth.onAuthStateChanged(user => {
            if (user) {
                
                authForm.style.display = 'none';
                logoutBtn.style.display = 'block';
                
                
                setTimeout(() => {
                    window.location.href = "desertbag.html";
                }, 1000);
            } else {
                
                authForm.style.display = 'block';
                logoutBtn.style.display = 'none';
            }
        });

        function clearErrorMessages() {
            document.querySelectorAll('.error-message').forEach(el => {
                el.style.display = 'none';
                el.textContent = '';
            });
        }

        function showError(elementId, message) {
            const element = document.getElementById(elementId);
            element.textContent = message;
            element.style.display = 'block';
        }

        signupForm.addEventListener('submit', (e) => {
            e.preventDefault();
            clearErrorMessages();
            
            const email = document.getElementById('signupEmail').value;
            const password = document.getElementById('signupPassword').value;

            auth.createUserWithEmailAndPassword(email, password)
                .then((userCredential) => {
                    
                    return db.collection('users').doc(userCredential.user.uid).set({
                        email: email,
                        createdAt: firebase.firestore.FieldValue.serverTimestamp()
                    });
                })
                .then(() => {
                    alert("Account created successfully!");
                })
                .catch(error => {
                    console.error("Signup error:", error);
                    if (error.code === 'auth/email-already-in-use') {
                        showError('signupEmailError', 'This email is already registered');
                    } else if (error.code === 'auth/invalid-email') {
                        showError('signupEmailError', 'Invalid email address');
                    } else if (error.code === 'auth/weak-password') {
                        showError('signupPasswordError', 'Password should be at least 6 characters');
                    } else {
                        showError('signupEmailError', error.message);
                    }
                });
        });

        loginForm.addEventListener('submit', (e) => {
            e.preventDefault();
            clearErrorMessages();
            
            const email = document.getElementById('loginEmail').value;
            const password = document.getElementById('loginPassword').value;

            auth.signInWithEmailAndPassword(email, password)
                .then(() => {
                    alert("Logged in successfully!");
                })
                .catch(error => {
                    console.error("Login error:", error);
                    if (error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password') {
                        showError('loginEmailError', 'Invalid email or password');
                    } else if (error.code === 'auth/invalid-email') {
                        showError('loginEmailError', 'Invalid email address');
                    } else {
                        showError('loginEmailError', error.message);
                    }
                });
        });

        googleAuth.addEventListener('click', () => {
            const provider = new firebase.auth.GoogleAuthProvider();
            auth.signInWithPopup(provider)
                .then((result) => {
                    
                    const user = result.user;
                    return db.collection('users').doc(user.uid).set({
                        email: user.email,
                        name: user.displayName,
                        createdAt: firebase.firestore.FieldValue.serverTimestamp()
                    }, { merge: true });
                })
                .then(() => {
                    alert("Google login successful!");
                })
                .catch(error => {
                    console.error("Google login error:", error);
                    alert("Google login error: " + error.message);
                });
        });

        logoutBtn.addEventListener('click', (e) => {
            e.preventDefault();
            auth.signOut()
                .then(() => {
                    window.location.href = "signinn.html";
                });
        });
    </script>
</body>
</html>
