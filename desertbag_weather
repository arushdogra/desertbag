<!DOCTYPE html>
<html>
<head>
    <title>DESERT BAG - Weather</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap" rel="stylesheet">
    <style>
        
        :root {
            --desert-brown: #8B4513;
            --sunset-orange: #E67E22;
            --off-white: #FFF9F0;
            --soft-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }
body {
            background-image: url('https://i0.wp.com/travelwithme247blog.com/wp-content/uploads/2024/01/funky-desert-captions.jpg?resize=940%2C788&ssl=1');
            background-size: cover;
            background-repeat: no-repeat;
            background-attachment: fixed;
            background-position: center;
            margin: 0;
            font-family: 'Poppins', sans-serif;
            color: #333;
            min-height: 100vh;
        }
        nav {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(5px);
            padding: 1rem 5%;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: var(--soft-shadow);
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 10px;
            font-weight: 700;
            font-size: 1.2rem;
            color: var(--desert-brown);
        }

        .logo img {
            border-radius: 50%;
        }

        .nav-links {
            display: flex;
            gap: 1.5rem;
            align-items: center;
        }

        .nav-links a {
            text-decoration: none;
            color: var(--desert-brown);
            font-weight: 600;
            padding: 0.5rem 1rem;
            border-radius: 5px;
            transition: all 0.3s ease;
        }

        .nav-links a:hover {
            background: rgba(230, 126, 34, 0.1);
            color: var(--sunset-orange);
        }

        .nav-links a.active {
            background: rgba(230, 126, 34, 0.2);
        }

        body {
            background-image: url('https://i0.wp.com/travelwithme247blog.com/wp-content/uploads/2024/01/funky-desert-captions.jpg?resize=940%2C788&ssl=1');
            background-size: cover;
            background-repeat: no-repeat;
            background-attachment: fixed;
            background-position: center;
            margin: 0;
            font-family: 'Poppins', sans-serif;
            color: #333;
            min-height: 100vh;
        }

        .weather-container {
            padding: 2rem;
            max-width: 1200px;
            margin: 0 auto;
        }

        .weather-card {
            background: rgba(255, 255, 255, 0.85);
            backdrop-filter: blur(8px);
            border-radius: 15px;
            padding: 2.5rem;
            box-shadow: var(--soft-shadow);
        }

        .weather-search {
            display: flex;
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .weather-search input {
            flex: 1;
            padding: 12px 15px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-family: 'Poppins', sans-serif;
        }

        .weather-results {
            margin-top: 2rem;
        }

        .weather-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
        }

        .weather-temp {
            font-size: 2rem;
            font-weight: 700;
            color: var(--sunset-orange);
        }

        .daily-forecast {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            gap: 1rem;
            margin-top: 1.5rem;
        }

        .forecast-card {
            background: rgba(255, 255, 255, 0.8);
            padding: 1.5rem;
            border-radius: 10px;
            box-shadow: var(--soft-shadow);
        }
    </style>
</head>
<body>
    <nav>
        <div class="logo">
            <img src="C:\Hackthon proj\DESERT BAG.jpg" height="40px" width="40px"> 
            <span>Desert Bag</span>
        </div>
        <div class="nav-links">
            <a href="desertbag.html" class="nav-link">HOME</a>
            <a href="weather.html" class="nav-link active">WEATHER</a>
            <a href="survival.html" class="nav-link">SURVIVAL GUIDE</a>
            <a href="packing.html" class="nav-link">PACKING LIST</a>
            <a href="resource.html" class="nav-link"> RESOURCE </a>
            <a href="signinn.html">SIGN IN</a>
            <a href="map.html" class="nav-link"> MAP </a>
            <a id="logoutBtn" style="display:none;" href="#logout">LOGOUT</a>
            
        </div>
    </nav>

    <main class="weather-container">
        <div class="weather-card">
            <h1>Desert Weather Forecast</h1>
            <div class="weather-search">
                <input type="text" id="locationInput" placeholder="Enter desert location (e.g., Sahara, Mojave)">
                <button id="searchWeather" class="btn">Get Forecast</button>
            </div>
            <div id="weatherResults" class="weather-results">
            </div>
        </div>
    </main>

    <script>        
       
        document.getElementById('searchWeather').addEventListener('click', getWeatherData);

        async function getWeatherData() {
            const location = document.getElementById('locationInput').value.trim();
            
            if (!location) {
                alert("Please enter a desert location");
                return;
            }

            try {
                document.getElementById('weatherResults').innerHTML = '<p>Loading weather data...</p>';
            
                const coords = await getCoordinates(location);
                
                if (!coords) {
                    throw new Error("Location not found");
                }

                const weatherData = await fetchWeatherData(coords.latitude, coords.longitude);
                displayWeather(weatherData, location);
            } catch (error) {
                console.error("Weather error:", error);
                document.getElementById('weatherResults').innerHTML = `<p class="error">Failed to get weather data: ${error.message}</p>`;
            }
        }

        async function getCoordinates(location) {
            const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(location)}`);
            const data = await response.json();
            
            if (data.length > 0) {
                return {
                    latitude: parseFloat(data[0].lat),
                    longitude: parseFloat(data[0].lon)
                };
            }
            return null;
        }

        async function fetchWeatherData(latitude, longitude) {
            const response = await fetch(
                `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&current=temperature_2m,wind_speed_10m,relative_humidity_2m,precipitation,weather_code&daily=weather_code,temperature_2m_max,temperature_2m_min,sunrise,sunset&timezone=auto`
            );
            return await response.json();
        }

        function displayWeather(data, locationName) {
            const current = data.current;
            const daily = data.daily;
            
            document.getElementById('weatherResults').innerHTML = `
                <div class="weather-card">
                    <div class="weather-header">
                        <h3>${locationName}</h3>
                        <div class="weather-temp">${current.temperature_2m}°C</div>
                    </div>
                    <div class="weather-details">
                        <p><strong>Wind:</strong> ${current.wind_speed_10m} km/h</p>
                        <p><strong>Humidity:</strong> ${current.relative_humidity_2m}%</p>
                        <p><strong>Conditions:</strong> ${getWeatherDescription(current.weather_code)}</p>
                    </div>
                </div>
                
                <h3 style="margin-top: 2rem;">7-Day Forecast</h3>
                <div class="daily-forecast">
                    ${daily.time.map((day, index) => `
                        <div class="forecast-card">
                            <h4>${new Date(day).toLocaleDateString('en-US', { weekday: 'short' })}</h4>
                            <p><strong>High:</strong> ${daily.temperature_2m_max[index]}°C</p>
                            <p><strong>Low:</strong> ${daily.temperature_2m_min[index]}°C</p>
                            <p>${getWeatherDescription(daily.weather_code[index])}</p>
                        </div>
                    `).join('')}
                </div>
            `;
        }

        function getWeatherDescription(code) {
            const weatherMap = {
                0: "Clear sky",
                1: "Mainly clear",
                2: "Partly cloudy",
                3: "Overcast",
                45: "Fog",
                48: "Depositing rime fog",
                51: "Light drizzle",
                53: "Moderate drizzle",
                55: "Dense drizzle",
                56: "Light freezing drizzle",
                57: "Dense freezing drizzle",
                61: "Slight rain",
                63: "Moderate rain",
                65: "Heavy rain",
                66: "Light freezing rain",
                67: "Heavy freezing rain",
                71: "Slight snow fall",
                73: "Moderate snow fall",
                75: "Heavy snow fall",
                77: "Snow grains",
                80: "Slight rain showers",
                81: "Moderate rain showers",
                82: "Violent rain showers",
                85: "Slight snow showers",
                86: "Heavy snow showers",
                95: "Thunderstorm",
                96: "Thunderstorm with slight hail",
                99: "Thunderstorm with heavy hail"
            };
            
            return weatherMap[code] || "Unknown weather";
        }
    </script>
</body>
</html>
