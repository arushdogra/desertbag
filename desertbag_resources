<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shared Resources | Desert Bag</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap" rel="stylesheet">
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-auth-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-firestore-compat.js"></script>
    <style>
        :root {
            --desert-brown: #8B4513;
            --sunset-orange: #E67E22;
            --off-white: #FFF9F0;
            --soft-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

        body {
            font-family: 'Poppins', sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
            color: #333;
        }

        .container {
            max-width: 1000px;
            margin: 0 auto;
        }

        /* Header and Auth Styles */
        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
        }

        h1 {
            color: var(--desert-brown);
            margin: 0;
        }

        .auth-info {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .user-email {
            font-weight: 600;
            color: var(--desert-brown);
        }

        .logout-btn {
            background: var(--desert-brown);
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            font-family: 'Poppins', sans-serif;
            transition: all 0.3s;
        }

        .logout-btn:hover {
            background: #6b3a10;
        }

        .resource-form {
            background: white;
            padding: 25px;
            border-radius: 10px;
            box-shadow: var(--soft-shadow);
            margin-bottom: 30px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: var(--desert-brown);
        }

        .form-group input,
        .form-group textarea,
        .form-group select {
            width: 100%;
            padding: 12px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-family: 'Poppins', sans-serif;
            transition: all 0.3s;
        }

        .form-group input:focus,
        .form-group textarea:focus,
        .form-group select:focus {
            border-color: var(--sunset-orange);
            outline: none;
        }

        .form-group textarea {
            min-height: 120px;
            resize: vertical;
        }

        .submit-btn {
            background: var(--sunset-orange);
            color: white;
            border: none;
            padding: 12px 25px;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            width: 100%;
            transition: all 0.3s;
        }

        .submit-btn:hover {
            background: #d35400;
        }

    
        .resources-container {
            background: white;
            padding: 25px;
            border-radius: 10px;
            box-shadow: var(--soft-shadow);
        }

        .resources-list {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .resource-card {
            border: 1px solid #eee;
            border-radius: 8px;
            padding: 20px;
            position: relative;
            transition: all 0.3s;
        }

        .resource-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .resource-category {
            display: inline-block;
            background: var(--desert-brown);
            color: white;
            padding: 3px 8px;
            border-radius: 4px;
            font-size: 12px;
            margin-bottom: 10px;
        }

        .resource-title {
            margin: 0 0 10px 0;
            color: var(--desert-brown);
        }

        .resource-desc {
            margin: 0 0 15px 0;
            color: #555;
            font-size: 14px;
        }

        .resource-link {
            color: var(--sunset-orange);
            text-decoration: none;
            font-weight: 600;
            font-size: 14px;
        }

        .resource-link:hover {
            text-decoration: underline;
        }

        .resource-meta {
            font-size: 12px;
            color: #888;
            margin-top: 15px;
            border-top: 1px dashed #eee;
            padding-top: 10px;
        }

        .delete-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            background: #e74c3c;
            color: white;
            border: none;
            width: 25px;
            height: 25px;
            border-radius: 50%;
            cursor: pointer;
            font-weight: bold;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s;
        }

        .delete-btn:hover {
            background: #c0392b;
        }


        .login-prompt {
            text-align: center;
            padding: 40px;
            background: white;
            border-radius: 10px;
            box-shadow: var(--soft-shadow);
        }

        .login-prompt a {
            color: var(--sunset-orange);
            text-decoration: none;
            font-weight: 600;
        }

        .login-prompt a:hover {
            text-decoration: underline;
        }


        .loading {
            text-align: center;
            padding: 30px;
            color: var(--desert-brown);
            grid-column: 1 / -1;
        }

        .error-message {
            color: #e74c3c;
            padding: 15px;
            background: #fdecea;
            border-radius: 8px;
            margin-bottom: 20px;
            display: none;
        }

        @media (max-width: 768px) {
            .header {
                flex-direction: column;
                align-items: flex-start;
                gap: 15px;
            }
            
            .resources-list {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="container">

        <div class="error-message" id="error-message"></div>

        <div class="header">
            <h1>Shared Resources</h1>
            <div class="auth-info" id="auth-info" style="display: none;">
                <span class="user-email" id="user-email"></span>
                <button class="logout-btn" id="logout-btn">Logout</button>
            </div>
        </div>

        <div id="logged-in-content" style="display: none;">
            <div class="resource-form">
                <h2>Add New Resource</h2>
                <form id="resource-form">
                    <div class="form-group">
                        <label for="resource-title">Title</label>
                        <input type="text" id="resource-title" placeholder="Enter resource title" required>
                    </div>
                    <div class="form-group">
                        <label for="resource-category">Category</label>
                        <select id="resource-category" required>
                            <option value="">Select a category</option>
                            <option value="Survival Guide">Survival Guide</option>
                            <option value="Equipment">Equipment</option>
                            <option value="Navigation">Navigation</option>
                            <option value="First Aid">First Aid</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="resource-desc">Description</label>
                        <textarea id="resource-desc" placeholder="Enter detailed description" required></textarea>
                    </div>
                    <div class="form-group">
                        <label for="resource-link">Link (optional)</label>
                        <input type="url" id="resource-link" placeholder="https://example.com">
                    </div>
                    <button type="submit" class="submit-btn">Add Resource</button>
                </form>
            </div>

            <div class="resources-container">
                <h2>Community Resources</h2>
                <div class="resources-list" id="resources-list">
                    <div class="loading">Loading resources...</div>
                </div>
            </div>
        </div>

        <div id="login-prompt" class="login-prompt">
            <h2>Please log in to view and share resources</h2>
            <p>You need to be logged in to contribute to the community resources.</p>
            <p><a href="signinn.html">Go to Login Page</a></p>
        </div>
    </div>

    <script>
        const firebaseConfig = {
            apiKey: "AIzaSyDaY-KSwBm874ajkzeureqXknB-wQiFvFo",
            authDomain: "desertbagg.firebaseapp.com",
            projectId: "desertbagg",
            storageBucket: "desertbagg.appspot.com",
            messagingSenderId: "28779791562",
            appId: "1:28779791562:web:9748e8e776a6c8b0a7e033",
            measurementId: "G-97L61WG0W2"
        };

        const app = firebase.initializeApp(firebaseConfig);
        const auth = firebase.auth();
        const db = firebase.firestore();

        const authInfo = document.getElementById('auth-info');
        const userEmailSpan = document.getElementById('user-email');
        const logoutBtn = document.getElementById('logout-btn');
        const loggedInContent = document.getElementById('logged-in-content');
        const loginPrompt = document.getElementById('login-prompt');
        const resourceForm = document.getElementById('resource-form');
        const resourcesList = document.getElementById('resources-list');
        const errorMessage = document.getElementById('error-message');

        function showError(message) {
            errorMessage.textContent = message;
            errorMessage.style.display = 'block';
            setTimeout(() => {
                errorMessage.style.display = 'none';
            }, 5000);
        }

        auth.onAuthStateChanged((user) => {
            if (user) {
                
                userEmailSpan.textContent = user.email;
                authInfo.style.display = 'flex';
                loggedInContent.style.display = 'block';
                loginPrompt.style.display = 'none';
                loadResources();
            } else {
                
                authInfo.style.display = 'none';
                loggedInContent.style.display = 'none';
                loginPrompt.style.display = 'block';
                resourcesList.innerHTML = '';
            }
        }, (error) => {
            console.error("Auth state error:", error);
            showError("Error checking login status. Please refresh the page.");
        });


        logoutBtn.addEventListener('click', (e) => {
            e.preventDefault();
            auth.signOut()
                .then(() => {
                    window.location.href = "signinn.html";
                })
                .catch((error) => {
                    console.error("Logout error:", error);
                    showError("Error logging out. Please try again.");
                });
        });

        resourceForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const user = auth.currentUser;
            
            if (!user) {
                showError("Please log in first!");
                return;
            }
            
            const title = document.getElementById('resource-title').value;
            const category = document.getElementById('resource-category').value;
            const description = document.getElementById('resource-desc').value;
            const link = document.getElementById('resource-link').value;
            
            try {
                await db.collection("resources").add({
                    title: title,
                    category: category,
                    description: description,
                    link: link,
                    userId: user.uid,
                    userEmail: user.email,
                    createdAt: firebase.firestore.FieldValue.serverTimestamp(),
                    updatedAt: firebase.firestore.FieldValue.serverTimestamp()
                });
                
                resourceForm.reset();
                
                alert("Resource added successfully!");
                
            } catch (error) {
                console.error("Error adding resource:", error);
                showError("Error adding resource: " + error.message);
            }
        });

        async function loadResources() {
            resourcesList.innerHTML = '<div class="loading">Loading community resources...</div>';
            
            try {
                const querySnapshot = await db.collection("resources")
                    .orderBy("createdAt", "desc")
                    .get();
                
                if (querySnapshot.empty) {
                    resourcesList.innerHTML = '<div style="grid-column:1/-1;text-align:center;">No resources found. Be the first to add one!</div>';
                    return;
                }
                
                resourcesList.innerHTML = '';
                
                querySnapshot.forEach((doc) => {
                    const resource = doc.data();
                    const isOwner = auth.currentUser && auth.currentUser.uid === resource.userId;
                    
                    const resourceCard = document.createElement('div');
                    resourceCard.className = 'resource-card';
                    resourceCard.innerHTML = `
                        ${isOwner ? `<button class="delete-btn" data-id="${doc.id}">×</button>` : ''}
                        <span class="resource-category">${resource.category}</span>
                        <h3 class="resource-title">${resource.title}</h3>
                        <p class="resource-desc">${resource.description}</p>
                        ${resource.link ? `<a href="${resource.link}" class="resource-link" target="_blank">View Resource</a>` : ''}
                        <div class="resource-meta">
                            Added by: ${resource.userEmail || 'Anonymous'}<br>
                            ${new Date(resource.createdAt?.toDate()).toLocaleString()}
                        </div>
                    `;
                    
                    resourcesList.appendChild(resourceCard);
                    
                    if (isOwner) {
                        const deleteBtn = resourceCard.querySelector('.delete-btn');
                        deleteBtn.addEventListener('click', async (e) => {
                            if (confirm('Are you sure you want to delete this resource?')) {
                                try {
                                    await db.collection("resources").doc(doc.id).delete();
                                    resourceCard.remove();
                                } catch (error) {
                                    console.error("Error deleting resource:", error);
                                    showError("Error deleting resource: " + error.message);
                                }
                            }
                        });
                    }
                });
            } catch (error) {
                console.error("Error loading resources:", error);
                resourcesList.innerHTML = '<div class="error-message" style="grid-column:1/-1">Error loading resources. Please refresh the page.</div>';
            }
        }
    </script>
</body>
</html>
